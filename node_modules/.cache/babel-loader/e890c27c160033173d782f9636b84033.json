{"ast":null,"code":"import _classCallCheck from \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evanlondono/Desktop/UdemyReactJsCourseExample/src/hoc/withClass.js\";\nimport React, { Component } from 'react'; // import React from 'react';\n// const withClass = (WrappedComponent, className) =>{\n//     return (props) => (\n//         <div className={className}>\n//             <WrappedComponent {...props} />\n//         </div>\n//     )\n// }\n// Below is a function that returns a class on demand and the class name doesn't matter.\n\nvar withClass = function withClass(WrappedComponent, className) {\n  var WithClass =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(WithClass, _Component);\n\n    function WithClass() {\n      _classCallCheck(this, WithClass);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(WithClass).apply(this, arguments));\n    }\n\n    _createClass(WithClass, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        })));\n      }\n    }]);\n\n    return WithClass;\n  }(Component);\n\n  return React.forwardRef(function () {});\n};\n\nexport default withClass;","map":{"version":3,"sources":["/Users/evanlondono/Desktop/UdemyReactJsCourseExample/src/hoc/withClass.js"],"names":["React","Component","withClass","WrappedComponent","className","WithClass","props","forwardRef"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAmBC,SAAnB,EAAiC;AAC/C,MAAMC,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACH;AACJ,eACI;AAAK,UAAA,SAAS,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,gBAAD,oBAAsB,KAAKE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAKH;AAPU;;AAAA;AAAA,IAAiBL,SAAjB,CAAf;;AASA,SAAOD,KAAK,CAACO,UAAN,CAAiB,YAAK,CAAE,CAAxB,CAAP;AACH,CAXD;;AAaA,eAAeL,SAAf","sourcesContent":["import React, { Component }from 'react';\n\n// import React from 'react';\n// const withClass = (WrappedComponent, className) =>{\n//     return (props) => (\n//         <div className={className}>\n//             <WrappedComponent {...props} />\n//         </div>\n//     )\n// }\n\n\n// Below is a function that returns a class on demand and the class name doesn't matter.\nconst withClass = (WrappedComponent, className) => {\n    const WithClass = class extends Component {\n        render(){\n            return(\n                <div className={className}>\n                    <WrappedComponent {...this.props} />\n                </div>\n           )\n        }   \n    }    \n    return React.forwardRef(()=> {} );\n}\n\nexport default withClass; "]},"metadata":{},"sourceType":"module"}